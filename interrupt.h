/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef INTERRUPT_H_
#define INTERRUPT_H_

#include <ndis.h>

extern "C" {
// Handler for interrupt generated by NIC.
MINIPORT_ISR MiniportInterrupt;

// Handler to complete the deferred processing of an interrupt.
MINIPORT_INTERRUPT_DPC MiniportInterruptDPC;

// Handler to disable interrupts for diagnostic and troubleshooting purposes.
MINIPORT_DISABLE_INTERRUPT MiniportDisableInterruptEx;

// Handler to enable interrupts for diagnostic and troubleshooting purposes.
MINIPORT_ENABLE_INTERRUPT MiniportEnableInterruptEx;

// Handler for a message-based interrupt.
MINIPORT_MESSAGE_INTERRUPT MiniportMSIInterrupt;

// Handler to complete the deferred processing of a message-based interrupt.
MINIPORT_MESSAGE_INTERRUPT_DPC MiniportMSIInterruptDpc;

// Handler to disable a message interrupt for diagnostic and troubleshooting.
MINIPORT_DISABLE_MESSAGE_INTERRUPT MiniportDisableMSIInterrupt;

// Handler for to enable a message interrupt for diagnostic and troubleshooting.
MINIPORT_ENABLE_MESSAGE_INTERRUPT MiniportEnableMSIInterrupt;
}

#endif  // INTERRUPT_H_
